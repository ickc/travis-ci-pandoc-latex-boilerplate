SHELL := /bin/bash

COURSE := master 7a 8a
# LaTeX workflow
LaTeXtex := $(addsuffix .tex,$(addprefix workbook-, $(COURSE)))
LaTeXpdf := $(addsuffix .pdf,$(addprefix workbook-, $(COURSE)))
# pandoc workflow
pandocTeX := $(addsuffix -workbook.tex,$(COURSE))
pandocPDF := $(addsuffix -workbook.pdf,$(COURSE))

CSV := $(wildcard *.csv)
# LaTeX workflow
CSV2TeX7a := $(patsubst %.csv,%-7a.tex,$(CSV))
CSV2TeX8a := $(patsubst %.csv,%-8a.tex,$(CSV))
CSV2TeXmaster := $(patsubst %.csv,%-master.tex,$(CSV))
# pandoc workflow
CSV2MD7a := $(patsubst %.csv,%-7a.md,$(CSV))
CSV2MD8a := $(patsubst %.csv,%-8a.md,$(CSV))
CSV2MDmaster := $(patsubst %.csv,%-master.md,$(CSV))

MD := $(wildcard */*.md)
# LaTeX workflow
MD2TeX := $(patsubst %.md,%.tex,$(MD))

filterPATH:=submodule/pandoc-amsthm/bin/
headerPATH:=submodule/pandoc-amsthm/template/include/
pandocArcCommon := -f markdown+autolink_bare_uris-implicit_figures-fancy_lists --toc --normalize -V linkcolorblue -V citecolor=blue -V urlcolor=blue -V toccolor=blue --latex-engine=xelatex
pandocArcREADME := $(pandocArcCommon) --toc-depth=6
# LaTeX workflow
LaTeXarc := -xelatex
pandocArcLaTeX := $(pandocArcCommon) --chapters -N --toc-depth=1 --filter=$(filterPATH)pandoc-amsthm.py
# pandoc workflow
pandocArcPandoc := $(pandocArcLaTeX) -H $(headerPATH)default.tex -H workbook.sty

# building
# LaTeX workflow
LaTeX: $(MD2TeX) $(CSV2TeX7a) $(CSV2TeX8a) $(CSV2TeXmaster) $(LaTeXpdf) README.md README.pdf workbook.tex
7a: $(MD2TeX) $(CSV2TeX7a) workbook-7a.pdf workbook.tex
8a: $(MD2TeX) $(CSV2TeX8a) workbook-8a.pdf workbook.tex
master: $(MD2TeX) $(CSV2TeXmaster) workbook-master.pdf workbook.tex
# pandoc workflow
pandoc: $(CSV2MD7a) $(CSV2MD8a) $(CSV2MDmaster) $(pandocTeX) $(pandocPDF) README.md README.pdf
pandoc7a: $(CSV2MD7a) workbook-7a.tex 7a-workbook.pdf
pandoc8a: $(CSV2MD8a) workbook-8a.tex 8a-workbook.pdf
pandocMaster: $(CSV2MD7a) workbook-master.tex master-workbook.pdf

readme: README.md README.pdf

# cleaning generated files
## clean everything
Clean:
	latexmk -C -f $(LaTeXtex)
	rm -f $(MD2TeX) $(CSV2TeX7a) $(CSV2TeX8a) $(CSV2TeXmaster) $(CSV2MD7a) $(CSV2MD8a) $(CSV2MDmaster) $(pandocTeX) $(pandocPDF) README.pdf workbook.tex
## clean everthing but PDF output
clean:
	latexmk -c -f $(LaTeXtex)
	rm -f $(MD2TeX) $(CSV2TeX7a) $(CSV2TeX8a) $(CSV2TeXmaster) $(CSV2MD7a) $(CSV2MD8a) $(CSV2MDmaster) $(pandocTeX) workbook.tex

# update submodule
update:
	git submodule update --recursive --remote

# use lacheck and chktex to check LaTeX styling problems
lint: $(MD2TeX)
	find */ -iname '*.tex' -exec chktex -q '{}' \;
	find */ -iname '*.tex' -exec lacheck '{}' \;

# Normalize white spaces:
normalize:
	find */*.md -exec sed -i 's/[ \t]*$//' '{}' \; # delete trailing whitespace (spaces, tabs) from end of each line
	find */*.md -exec sed -i '/./,/^$/!d' '{}' \; # delete all CONSECUTIVE blank lines from file except the first; deletes all blank lines from top and end of file; allows 0 blanks at top, 1 at EOF
	find */*.md -exec sed -i '1i\'$'\n' '{}' \; # add leading new line

###################################################################################################################################################################################################

# README
README.md: README-organization.md README-guidelines.md README-contributing.md README-textbook-toc-7.md README-textbook-toc-8.md
	echo "---" > README.md
	printf "title:	Readme\nfontfamily:	lmodern,siunitx,cancel,physics,placeins\n...\n\n***This README is auto-generated from \`README-*.md\`. Do not edit this file directly.***\n\n" >> README.md
	printf "\n# Organization\n\n" >> README.md
	sed s=^#=##=g README-organization.md >> README.md
	printf "\n# Guidelines from Ben\n\n" >> README.md
	sed s=^#=##=g README-guidelines.md >> README.md
	printf "\n# Contributing\n\n" >> README.md
	sed s=^#=##=g README-contributing.md >> README.md
	printf "\n# Resources\n\n" >> README.md
	sed s=^#=##=g README-textbook-toc-7.md >> README.md
	sed s=^#=##=g README-textbook-toc-8.md >> README.md
README.pdf: README.md
	pandoc $(pandocArcREADME) -s -o $@ $<

# LaTeX workflow
## md to TeX
%.tex: %.md workbook.yml
	cat workbook.yml $< | pandoc $(pandocArcLaTeX) -o $@
## workbook.tex
workbook.tex: workbook.yml
	pandoc $(pandocArcPandoc) -t latex -s $< | sed 's/\\end{document}//' > $@
## CSV to TeX
### workbooks
workbook-7a.tex: workbook.csv workbook.tex
	printf '%s\n' "\title{Physics 7A}" > $@
	grep 7a $< | cut -d, -f 6 | tail -n +2 | sed -e 's=^=\\input{=g' -e 's=$$=-7a.tex}=g' | cat workbook.tex - >> $@
	echo "\end{document}" >> $@
workbook-8a.tex: workbook.csv workbook.tex
	printf '%s\n' "\title{Physics 8A}" > $@
	grep 8a $< | cut -d, -f 6 | tail -n +2 | sed -e 's=^=\\input{=g' -e 's=$$=-8a.tex}=g' | cat workbook.tex - >> $@
	echo "\end{document}" >> $@
workbook-master.tex: workbook.csv workbook.tex
	printf '%s\n' "\title{Physics Master}" > $@
	cut -d, -f 6 $< | tail -n +2 | sed -e 's=^=\\input{=g' -e 's=$$=-master.tex}=g' | cat workbook.tex - >> $@
	echo "\end{document}" >> $@
### worksheets
%-7a.tex: %.csv
	grep 7a $< | cut -d, -f 6 | tail -n +2 | sed -e 's=^=\\input{$(patsubst %.csv,%,$<)/=g' -e 's=$$=.tex}=g' > $@
%-8a.tex: %.csv
	grep 8a $< | cut -d, -f 6 | tail -n +2 | sed -e 's=^=\\input{$(patsubst %.csv,%,$<)/=g' -e 's=$$=.tex}=g' > $@
%-master.tex: %.csv
	cut -d, -f 6 $< | tail -n +2 | sed -e 's=^=\\input{$(patsubst %.csv,%,$<)/=g' -e 's=$$=.tex}=g' > $@
# pandoc workflow
## CSV to md
### workbooks
workbook-7a.md: workbook.csv workbook.yml $(CSV2MD7a)
	cat workbook.yml > $@
	STRING=$$(grep 7a $< | cut -d, -f 6 | tail -n +2 | sed -e 's=$$=-7a.md=g'); cat $$STRING >> $@
workbook-8a.md: workbook.csv workbook.yml $(CSV2MD8a)
	cat workbook.yml > $@
	STRING=$$(grep 8a $< | cut -d, -f 6 | tail -n +2 | sed -e 's=$$=-8a.md=g'); cat $$STRING >> $@
workbook-master.md: workbook.csv workbook.yml $(CSV2MDmaster)
	cat workbook.yml > $@
	STRING=$$(cut -d, -f 6 $< | tail -n +2 | sed -e 's=$$=-master.md=g'); cat $$STRING >> $@
### worksheets
%-7a.md: %.csv $(MD)
	STRING=$$(grep 7a $< | cut -d, -f 6 | tail -n +2 | sed -e 's=^=$(patsubst %.csv,%,$<)/=g' -e 's=$$=.md=g'); cat $$STRING > $@
%-8a.md: %.csv $(MD)
	STRING=$$(grep 8a $< | cut -d, -f 6 | tail -n +2 | sed -e 's=^=$(patsubst %.csv,%,$<)/=g' -e 's=$$=.md=g'); cat $$STRING > $@
%-master.md: %.csv $(MD)
	STRING=$$(cut -d, -f 6 $< | tail -n +2 | sed -e 's=^=$(patsubst %.csv,%,$<)/=g' -e 's=$$=.md=g'); cat $$STRING > $@

# LaTeX workflow
## TeX to PDF
workbook-%.pdf: $(MD2TeX) $(CSV2TeX%)
	latexmk $(LaTeXarc) $(patsubst %.pdf,%.tex,$@)
# pandoc workflow
## md to Tex
%-workbook.tex: workbook-%.md
	pandoc $(pandocArcPandoc) -M title="Physics $(patsubst workbook-%.md,%,$<)" -s -o $@ $<
## md to PDF
%-workbook.pdf: workbook-%.md
	pandoc $(pandocArcPandoc) -s -o $@ $<
